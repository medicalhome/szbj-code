<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<bean id="dataSource" class="com.founder.cdr.core.SpringDataSourceProxy">
		<property name="target" ref="dataSourceTarget" />
	</bean>

	<bean id="dataSourceTarget" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${web.maxActive}" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="1000" />
		<property name="defaultAutoCommit" value="true" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="30" />
		<property name="validationQuery" value="select count(*) from dual" />
		<property name="testOnBorrow" value="true" />
	</bean>

	<!-- 后面properties文件中的设置会覆盖前面文件的值
		测试环境没有设定外部路径，直接使用classpath中的设定文件
		生产环境会设定ext.prop.dir变量，使用外部路径中的设定文件覆盖classpath中的设定
	 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:setting.properties</value>
				
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>
	
	<bean id="session" class="com.founder.fasf.core.util.daohelper.impl.DefaultSession"
		lazy-init="true" >
		<property name="dataSource" ref="dataSource"></property>
		<property name="dialect" ref="oracleDialect" />
	</bean>
	
	<bean id="entityDao" class="com.founder.fasf.core.util.daohelper.entity.EntityDao"
		lazy-init="true">
		<property name="session" ref="session" />
	</bean>
	
	<bean id="sqlDaoProxyAssembler"
		class="com.founder.fasf.core.util.dihelper.impl.SQLDaoProxyAssembler">
		<constructor-arg ref="session" />
		<property name="interceptorClass" value="com.founder.fasf.web.interceptor.WebSQLDaoInterceptor" />
	</bean>
</beans>
